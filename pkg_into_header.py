"""
Reads src code from src/ and packages into single header file ws_ctube.h
"""

from io import TextIOWrapper
import re

SRC_DIR = "src"
DEST_HEADER = "ws_ctube.h"

file_list = [
    "static_assert.h",
    "container_of.h",

    "ref_count.h",
    "list.h",

    "crypt.h",
    "socket.h",
    "ws_base.h",
    "ws_ctube_struct.h",

    "crypt.c",
    "ws_base.c",
    "ws_ctube.c",
]

system_include = set()

def system_include_str() -> str:
    result = ""
    for hfile in system_include:
        result += f"#include <{hfile}>\n"
    return result

def pkg_from(src: TextIOWrapper) -> str:
    out_code = ""

    lines = src.readlines()
    for line in lines:
        if line.startswith("#include <"):
            # put #include <...> into set
            system_hdr = line.split("#include <")[1].split(">")[0]
            system_include.add(system_hdr)
        elif line.startswith("#include \""):
            # remove #include "...""
            pass
        else:
            # remove // comments
            out_code += line.split("//")[0]

    return out_code

def main():
    code = ""
    for fname in file_list:
        with open(f"{SRC_DIR}/{fname}", "r") as f:
            code += pkg_from(f)

    # remove /** */ comments
    code = re.sub(r"/\*\*.*?\*/", "", code, flags=re.DOTALL)

    # final include
    with open(f"{SRC_DIR}/_ws_ctube.h", "r") as f:
        code += pkg_from(f)

    with open(DEST_HEADER, "w") as hfile:
        hfile.write(
"""/*
 * Copyright (c) 2023, Bryance Oyang. All rights reserved.
 *
 * This file is autogenerated by the pkg_into_header.py script from src/
 */


""")
        hfile.write("#ifdef __cplusplus\nnamespace ws_ctube {\n#endif /* __cplusplus */\n\n")
        hfile.write(system_include_str())
        hfile.write(code)
        hfile.write("\n\n#ifdef __cplusplus\n} /* namespace ws_ctube */\n#endif /* __cplusplus */")

main()
