"""
Run from ../pkg.sh

Reads src code from src/ and packages into single header file ws_ctube.h
"""

from io import TextIOWrapper
import re

DEST_HEADER = "../ws_ctube.h"

file_list = [
    "container_of.h",

    "ref_count.h",
    "list.h",

    "crypt.h",
    "socket.h",
    "ws_base.h",
    "ws_ctube_struct.h",

    "crypt.c",
    "ws_base.c",
    "ws_ctube.c",
]

system_include = []
system_include_set = set()

def system_include_str() -> str:
    result = ""
    for hfile in system_include:
        result += f"#include <{hfile}>\n"
    return result

def pkg_from(src: TextIOWrapper) -> str:
    out_code = ""

    lines = src.readlines()
    for line in lines:
        if line.startswith("#include <"):
            # put #include <...> into set
            system_hdr = line.split("#include <")[1].split(">")[0]
            if system_hdr not in system_include_set:
                system_include_set.add(system_hdr)
                system_include.append(system_hdr)
        elif line.startswith("#include \""):
            # remove #include "...""
            pass
        else:
            # remove // comments
            out_code += line.split("//")[0]

    return out_code

def main():
    # main include
    with open("_ws_ctube.h", "r") as f:
        ws_ctube_h = f.read()

    # all other files
    code = ""
    for fname in file_list:
        with open(fname, "r") as f:
            code += pkg_from(f)

    # remove /** */ comments
    code = re.sub(r"/\*\*.*?\*/", "", code, flags=re.DOTALL)

    with open(DEST_HEADER, "w") as hfile:
        hfile.write(
"""/*
 * Copyright (c) 2023, Bryance Oyang. All rights reserved.
 *
 * This file is autogenerated by the pkg_into_header.py script from src/
 */

""")
        hfile.write("#ifndef WS_CTUBE_H\n#define WS_CTUBE_H\n\n")
        hfile.write("#ifdef __cplusplus\nnamespace ws_ctube {\n#endif /* __cplusplus */\n\n")
        hfile.write(ws_ctube_h)
        hfile.write(system_include_str())
        hfile.write(code)
        hfile.write("\n\n#ifdef __cplusplus\n} /* namespace ws_ctube */\n#endif /* __cplusplus */")
        hfile.write("\n\n#endif /* WS_CTUBE_H */")

main()
